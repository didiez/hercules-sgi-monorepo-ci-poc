{{- if or .Values.persistence.enabled .Values.database.persistence.enabled }} 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sgi-esb-external.fullname" . }}
  labels:
    {{- include "sgi-esb-external.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "sgi-esb-external.fullname" . }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  selector:
    matchLabels:
      {{- include "sgi-esb-external.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.annotations.enabled }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.annotations.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}  
      labels:
        {{- include "sgi-esb-external.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sgi-esb-external.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.database.use_sidecar }}
        - name: postgres-container
          image: postgres:12
          env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: admin
          - name: POSTGRES_DB
            value: db
          ports:
            - containerPort: 5432
          {{- if .Values.database.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
        {{- end }}  
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ required "An image.repository value must be specified" .Values.image.repository }}:{{ required "An image.tag value must be specified" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # need to streamline this
          env:
          - name: SERVER_PORT
            value: {{ .Values.server.port | quote }}
          - name: SPRING_DATASOURCE_URL
            value: {{ .Values.spring.datasourceUrl | quote }}
          - name: SPRING_LIQUIBASE_CONTEXTS
            value: {{ .Values.spring.liquibaseContexts | quote }}
          {{- if .Values.persistence.enabled }}
          - name: SGI_STORE_PATH
            value: {{ .Values.persistence.mountPath | quote }}
          {{- end }}
          {{- if .Values.extraEnvVariables }}
            {{- toYaml .Values.extraEnvVariables | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          # commented out until clarified
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if .Values.persistence.enabled }}
    - metadata:
        name: data
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
    {{- end }}
    {{- if and .Values.database.use_sidecar .Values.database.persistence.enabled }}
    - metadata:
        name: postgres-data
      spec:
        accessModes:
        {{- range .Values.database.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .Values.database.persistence.storageClass }}
        storageClassName: {{ .Values.database.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.database.persistence.size | quote }}
    {{- end }}
{{- end }}