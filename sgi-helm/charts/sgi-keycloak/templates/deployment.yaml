apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sgi-keycloak.fullname" . }}
  labels:
    {{- include "sgi-keycloak.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sgi-keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.annotations.enabled }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.annotations.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "sgi-keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sgi-keycloak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: KEYCLOAK_USER
            value: {{ .Values.settings.keycloakUser }}
          - name: KEYCLOAK_PASSWORD
            value: {{ .Values.settings.keycloakPassword }}
          - name: PROXY_ADDRESS_FORWARDING
            value: {{ quote .Values.settings.proxyAddressForwarding }}
          - name: KEYCLOAK_MIGRATION_STRATEGY
            value: {{ .Values.settings.keycloakMigrationStrategy }}
          - name: KEYCLOAK_IMPORT
            value: /realm/sgi-realm.json
          {{- if .Values.extraEnvVariables }}
            {{- toYaml .Values.extraEnvVariables | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth/
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
